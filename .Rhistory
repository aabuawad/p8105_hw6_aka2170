count(word, boro) %>%
group_by(word) %>%
filter(sum(n) >= 5) %>% #within word calculate the sums and remove anything less than 5
ungroup() %>%
spread(boro, n, fill = 0) %>% #spread it out to calculate odds ratios
mutate(
Manhattan_odds = (Manhattan + 1) / (sum(Manhattan) + 1),
Brooklyn_odds = (Brooklyn + 1) / (sum(Brooklyn) + 1),
log_OR = log(Manhattan_odds / Brooklyn_odds)
) %>% #computing odds ratios
arrange(desc(log_OR))
word_ratios %>%
mutate(pos_log_OR = ifelse(log_OR > 0, "Manhattan > Brooklyn", "Brooklyn > Manhattan")) %>% #finding words that appear most in each group
group_by(pos_log_OR) %>%
top_n(15, abs(log_OR)) %>% #taking top 15 freq appearing words in each groups
ungroup() %>%
mutate(word = fct_reorder(word, log_OR)) %>% #reordering according to log OR
ggplot(aes(word, log_OR, fill = pos_log_OR)) +
geom_col() +
coord_flip() +
ylab("log odds ratio (Manhattan/Brooklyn)") +
scale_fill_discrete(name = "")
nyc_inspections %>%
filter(str_detect(dba, regex("falafel", ignore_case = TRUE))) %>%
mutate(boro = fct_infreq(boro)) %>% #creating factor variable based on freq
ggplot(aes(x = boro, y = grade, fill = grade)) + geom_point() + labs(x = "Borough" , y = "Grade", title = "NYC Inpection Grades for Falafel Restaurants")
nyc_inspections %>%
filter(str_detect(dba, regex("falafel", ignore_case = TRUE))) %>%
mutate(boro = fct_infreq(boro)) %>% #creating factor variable based on freq
ggplot(aes(x = boro, y = grade, fill = grade)) + geom_col() + labs(x = "Borough" , y = "Grade", title = "NYC Inpection Grades for Falafel Restaurants")
nyc_inspections %>%
filter(str_detect(dba, regex("falafel", ignore_case = TRUE))) %>%
mutate(boro = fct_infreq(boro)) %>% #creating factor variable based on freq
ggplot(aes(x = boro, y = grade)) + geom_point() + labs(x = "Borough" , y = "Grade", title = "NYC Inpection Grades for Falafel Restaurants")
nyc_inspections %>%
filter(str_detect(dba, regex("falafel", ignore_case = TRUE))) %>%
mutate(boro = fct_infreq(boro))
nyc_inspections %>%
filter(str_detect(dba, regex("falafel", ignore_case = TRUE))) %>%
ggplot(aes(x = boro, y = grade)) + geom_point()
nyc_inspections %>%
filter(str_detect(dba, regex("falafel", ignore_case = TRUE))) %>%
mutate(boro = fct_infreq(boro)) %>% #creating factor variable based on freq
ggplot(aes(x = boro, y = n())) + geom_point()
nyc_inspections %>%
mutate(boro = fct_infreq(boro),
falafel_num = distinct(str_detect(dba, regex("falafel", ignore_case = TRUE)))) %>% #creating factor variable based on freq
ggplot(aes(x = boro, y = n())) + geom_point()
nyc_inspections %>%
filter(str_detect(dba, regex("falafel", ignore_case = TRUE))) %>%
mutate(boro = fct_infreq(boro)) %>% #creating factor variable based on freq
ggplot(aes(x = boro, y = score)) + geom_point()
nyc_inspections %>%
filter(str_detect(dba, regex("falafel", ignore_case = TRUE))) %>%
mutate(boro = fct_infreq(boro)) %>% #creating factor variable based on freq
ggplot(aes(x = boro, y = score)) + geom_violin()
nyc_inspections %>%
filter(str_detect(dba, regex("falafel", ignore_case = TRUE))) %>%
mutate(boro = fct_infreq(boro)) %>% #creating factor variable based on freq
ggplot(aes(x = boro, y = score, fill = score)) + geom_violin()
nyc_inspections %>%
filter(str_detect(dba, regex("falafel", ignore_case = TRUE))) %>%
mutate(boro = fct_infreq(boro)) %>% #creating factor variable based on freq
ggplot(aes(x = boro, y = score, color = score)) + geom_violin()
nyc_inspections %>%
filter(str_detect(dba, regex("falafel", ignore_case = TRUE))) %>%
mutate(boro = fct_infreq(boro)) %>% #creating factor variable based on freq
ggplot(aes(x = boro, y = score, color = grade)) + geom_violin()
nyc_inspections %>%
filter(str_detect(dba, regex("falafel", ignore_case = TRUE))) %>%
mutate(boro = fct_infreq(boro)) %>% #creating factor variable based on freq
ggplot(aes(x = boro, y = score, color = boro)) + geom_violin()
nyc_inspections %>%
filter(str_detect(dba, regex("falafel", ignore_case = TRUE))) %>%
mutate(boro = fct_infreq(boro)) %>% #creating factor variable based on freq
ggplot(aes(x = boro, y = score, fill = boro)) + geom_violin()
nyc_inspections %>%
filter(str_detect(dba, regex("falafel", ignore_case = TRUE))) %>%
mutate(boro = fct_infreq(boro)) %>% #creating factor variable based on freq
ggplot(aes(x = boro, y = score, fill = boro)) + geom_violin() + labs(x = "Borough" , y = "Grade", title = "NYC Inpection Grades for Falafel Restaurants")
nyc_inspections %>%
filter(str_detect(dba, regex("mediterranean", ignore_case = TRUE))) %>%
mutate(boro = fct_infreq(boro)) %>% #creating factor variable based on freq
ggplot(aes(x = boro, y = score, fill = boro)) + geom_violin() +
labs(x = "Borough" , y = "Grade", title = "NYC Inpection Grades for Falafel Restaurants")
nyc_inspections %>%
filter(str_detect(dba, regex("mediterranean", ignore_case = TRUE))) %>%
mutate(boro = fct_infreq(boro)) %>% #creating factor variable based on freq
ggplot(aes(x = boro, y = score, fill = boro)) + geom_violin() +
labs(x = "Borough" , y = "Grade", title = "NYC Inpection Grades for Mediterranean Restaurants")
nyc_inspections %>%
filter(str_detect(dba, regex("critical", ignore_case = TRUE))) %>%
mutate(boro = fct_infreq(boro)) %>% #creating factor variable based on freq
ggplot(aes(x = boro, y = score, fill = boro)) + geom_density()
nyc_inspections %>%
mutate(boro = fct_infreq(boro)) %>% #creating factor variable based on freq
ggplot(aes(x = critical_flag, y = score, fill = boro)) + geom_density()
nyc_inspections %>%
mutate(boro = fct_infreq(critical_flag)) %>% #creating factor variable based on freq
ggplot(aes(x = critical_flag, y = score, fill = boro)) + geom_density()
nyc_inspections %>%
mutate(boro = fct_infreq(critical_flag)) %>% #creating factor variable based on freq
ggplot(aes(x = critical_flag, y = score)) + geom_density()
nyc_inspections %>%
mutate(boro = fct_reorder(critical_flag)) %>% #creating factor variable based on freq
ggplot(aes(x = critical_flag, y = score)) + geom_density()
nyc_inspections %>%
mutate(boro = fct_infreq(critical_flag)) %>% #creating factor variable based on freq
ggplot(aes(x = critical_flag, y = score)) + geom_boxplot()
nyc_inspections %>%
filter(str_detect(dba, regex("critical", ignore_case = TRUE))) %>%
mutate(boro = fct_infreq(boro)) %>% #creating factor variable based on freq
ggplot(aes(x = boro, y = score, fill = boro)) + geom_boxplot()
nyc_inspections %>%
select(boro == "Brooklyn") %>%
ggplot(aes(x = cuisine_description, y = grade)) + geom_boxplot()
nyc_inspections %>%
filter(boro == "Brooklyn") %>%
ggplot(aes(x = cuisine_description, y = grade)) + geom_boxplot()
nyc_inspections %>%
filter(boro == "Brooklyn") %>%
ggplot(aes(x = cuisine_description, y = grade)) + geom_density()
nyc_inspections %>%
filter(critical_flag = "Critical") %>%
ggplot(aes(x = cuisine_description, y = grade))
nyc_inspections %>%
filter(critical_flag = "Critical") %>%
ggplot(aes(x = cuisine_description, y = grade)) + geom_density()
nyc_inspections %>%
filter(str_detect(critical_flag, regex("critical", ignore_case = TRUE))) %>%
ggplot(aes(x = cuisine_description, y = grade))
nyc_inspections %>%
filter(str_detect(critical_flag, regex("critical", ignore_case = TRUE))) %>%
ggplot(aes(x = boro, y = grade)) + geom_density()
nyc_inspections %>%
filter(str_detect(critical_flag, regex("critical", ignore_case = TRUE))) %>%
mutate(boro = fct_infreq(boro)) %>%
ggplot(aes(x = boro, y = grade)) + geom_boxplot()
nyc_inspections %>%
filter(str_detect(critical_flag, regex("critical", ignore_case = TRUE))) %>%
mutate(boro = fct_infreq(boro)) %>%
ggplot(aes(x = boro, y = score)) + geom_boxplot()
nyc_inspections %>%
filter(str_detect(critical_flag, regex("critical", ignore_case = TRUE))) %>%
mutate(boro = fct_infreq(boro)) %>%
ggplot(aes(x = boro, y = score)) + geom_density()
nyc_inspections %>%
filter(str_detect(critical_flag, regex("critical", ignore_case = TRUE))) %>%
mutate(boro = fct_infreq(boro)) %>%
ggplot(aes(x = boro, y = score)) + geom_density_ridges()
library(ggridges)
nyc_inspections %>%
filter(str_detect(critical_flag, regex("critical", ignore_case = TRUE))) %>%
mutate(boro = fct_infreq(boro)) %>%
ggplot(aes(x = boro, y = score)) + geom_density_ridges()
nyc_inspections %>%
mutate(cuisine_score = forcats::fct_reorder(cuisine_description, score, IQR)) %>%
ggplot(aes(x = score, y = cuisine_score)) + geom_density_ridges()
inspection_words %>%
mutate(cuisine_score = forcats::fct_reorder(cuisine_description, score, IQR)) %>%
ggplot(aes(x = score, y = cuisine_score)) + geom_density_ridges()
inspection_words %>%
filter(str_detect(critical_flag, regex("critical", ignore_case = TRUE))) %>%
mutate(boro = fct_infreq(boro)) %>%
ggplot(aes(x = boro, y = score)) + geom_density_ridges()
library(ggthemes)
inspection_words %>%
filter(str_detect(critical_flag, regex("critical", ignore_case = TRUE))) %>%
mutate(boro = fct_infreq(boro)) %>%
ggplot(aes(x = boro, y = score)) + geom_density_ridges()
inspection_words %>%
filter(str_detect(critical_flag, regex("critical", ignore_case = TRUE))) %>%
mutate(boro = fct_infreq(boro)) %>%
ggplot(aes(x = boro, y = score)) + geom_density(alpha = .4, adjust = .5, color = "blue")
inspection_words %>%
filter(str_detect(critical_flag, regex("critical", ignore_case = TRUE)))
inspection_words %>%
filter(str_detect(critical_flag, regex("critical", ignore_case = TRUE))) %>%
mutate(boro = fct_infreq(boro))
inspection_words %>%
filter(str_detect(critical_flag, regex("critical", ignore_case = TRUE))) %>%
mutate(boro = fct_infreq(boro)) %>%
ggplot(aes(x = boro, y = score)) + geom_density(alpha = .4, adjust = .5, color = "blue")
inspection_words %>%
filter(str_detect(critical_flag, regex("critical", ignore_case = TRUE))) %>%
group_by(boro) %>%
ggplot(aes(x = boro, y = score)) + geom_density(alpha = .4, adjust = .5, color = "blue")
inspection_words %>%
ggplot(aes(x = boro, y = score)) + geom_density(alpha = .4, adjust = .5, color = "blue")
inspection_words %>%
filter(str_detect(critical_flag, regex("falafel", ignore_case = TRUE))) %>%
mutate(boro = fct_infreq(boro)) %>%
ggplot(aes(x = boro, y = score))
inspection_words %>%
filter(str_detect(critical_flag, regex("falafel", ignore_case = TRUE))) %>%
mutate(boro = fct_infreq(boro)) %>%
ggplot(aes(x = boro, y = score)) + geom_density(alpha = .4, adjust = .5, color = "blue")
inspection_words %>%
filter(str_detect(critical_flag, regex("falafel", ignore_case = TRUE))) %>%
mutate(boro = fct_infreq(boro)) %>%
ggplot(aes(x = boro, y = score)) + geom_density()
bing_sentiments = get_sentiments("bing") #positive or negative sentiments
inspection_sentiments = inspection_words %>%
inner_join(., bing_sentiments) %>% #merge everything that overlaps with 2 datasets and keep only that
count(inspection_num, sentiment) %>% #counting pos and neg words in each inspection
spread(sentiment, n, fill = 0) %>% #spreading the data back out to get...
mutate(sentiment = positive - negative) %>% #a total score
select(inspection_num, sentiment)
inspection_sentiments =
right_join(nyc_inspections, inspection_sentiments,
by = "inspection_num")
inspection_sentiments %>%
filter(boro == "Brooklyn") %>% #don't want to plot all reviews
sample_n(5000) %>% #sample only 5000 reviews from borough
mutate(inspection_num = str_c("Inspection", inspection_num),
inspection_num = fct_reorder(inspection_num, sentiment)) %>%
ggplot(aes(x = inspection_num,
y = sentiment, fill = grade, color = grade)) +
geom_bar(stat = "identity") +
theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
scale_fill_viridis(discrete = TRUE) +
scale_color_viridis(discrete = TRUE)
inspection_sentiments %>%
filter(boro == "Brooklyn") %>% #don't want to plot all reviews
sample_n(5000) %>% #sample only 5000 reviews from borough
mutate(inspection_num = str_c("Inspection", inspection_num),
inspection_num = fct_reorder(inspection_num, sentiment)) %>%
ggplot(aes(x = inspection_num,
y = sentiment, fill = grade, color = grade)) +
geom_density() +
theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
scale_fill_viridis(discrete = TRUE) +
scale_color_viridis(discrete = TRUE)
View(inspection_sentiments)
inspection_sentiments %>%
filter(boro == "Brooklyn") %>% #don't want to plot all reviews
sample_n(5000) %>% #sample only 5000 reviews from borough
mutate(inspection_num = str_c("Inspection", inspection_num),
inspection_num = fct_reorder(inspection_num, sentiment)) %>%
ggplot(aes(x = inspection_num, y = sentiment) +
geom_density()
inspection_sentiments %>%
filter(boro == "Brooklyn") %>% #don't want to plot all reviews
sample_n(5000) %>% #sample only 5000 reviews from borough
mutate(inspection_num = str_c("Inspection", inspection_num),
inspection_num = fct_reorder(inspection_num, sentiment)) %>%
ggplot(aes(x = inspection_num, y = sentiment)) +
geom_density()
inspection_sentiments %>%
filter(boro == "Brooklyn") %>% #don't want to plot all reviews
sample_n(5000) %>% #sample only 5000 reviews from borough
mutate(inspection_num = str_c("Inspection", inspection_num),
inspection_num = fct_reorder(inspection_num, sentiment)) %>%
ggplot(aes(x = inspection_num, y = sentiment)) +
geom_density()
inspection_sentiments %>%
filter(boro == "Brooklyn") %>% #don't want to plot all reviews
top_n(100) %>% #top 100 reviews from borough
mutate(inspection_num = str_c("Inspection", inspection_num),
inspection_num = fct_reorder(inspection_num, sentiment)) %>%
ggplot(aes(x = inspection_num, y = sentiment)) +
geom_density()
View(inspection_sentiments)
inspection_sentiments %>%
filter(boro == "Brooklyn") %>% #don't want to plot all reviews
sample_n(5000) %>% #sample only 5000 reviews from borough
mutate(inspection_num = str_c("Inspection", inspection_num),
inspection_num = fct_reorder(inspection_num, sentiment)) %>%
ggplot(aes(x = inspection_num,
y = sentiment, fill = grade, color = grade)) +
geom_bar(stat = "identity") +
theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
scale_fill_viridis(discrete = TRUE) +
scale_color_viridis(discrete = TRUE)
inspection_sentiments %>%
filter(boro == "Brooklyn",
critical_flag == "Critical")
inspection_sentiments %>%
filter(boro == "Brooklyn",
critical_flag == "Critical") %>%
mutate(inspection_num = str_c("Inspection", inspection_num),
inspection_num = fct_reorder(inspection_num, sentiment))
inspection_sentiments %>%
filter(boro == "Brooklyn",
critical_flag == "Critical") %>%
mutate(inspection_num = str_c("Inspection", inspection_num),
inspection_num = fct_reorder(inspection_num, sentiment)) %>%
ggplot(aes(x = dba,
y = sentiment)) +
geom_density()
inspection_sentiments %>%
filter(boro == "Staten Island",
critical_flag == "Critical")
inspection_sentiments %>%
filter(boro == "Staten Island",
critical_flag == "Critical") %>%
mutate(inspection_num = str_c("Inspection", inspection_num),
inspection_num = fct_reorder(inspection_num, sentiment)) %>%
ggplot(aes(x = dba,
y = sentiment)) +
geom_density()
inspection_sentiments %>%
filter(boro == "Staten Island",
critical_flag == "Critical") %>%
mutate(inspection_num = str_c("Inspection", inspection_num),
inspection_num = fct_reorder(inspection_num, sentiment)) %>%
ggplot(aes(x = dba,
y = sentiment)) +
geom_point()
inspection_sentiments %>%
filter(boro == "Staten Island",
critical_flag == "Critical") %>%
top_n(15) %>%
mutate(inspection_num = str_c("Inspection", inspection_num),
inspection_num = fct_reorder(inspection_num, sentiment)) %>%
ggplot(aes(x = dba,
y = sentiment)) +
geom_point()
inspection_sentiments %>%
filter(boro == "Staten Island",
critical_flag == "Critical") %>%
mutate(inspection_num = str_c("Inspection", inspection_num),
inspection_num = fct_reorder(inspection_num, sentiment)) %>%
ggplot(aes(x = score,
y = sentiment))
inspection_sentiments %>%
filter(boro == "Staten Island",
critical_flag == "Critical") %>%
mutate(inspection_num = str_c("Inspection", inspection_num),
inspection_num = fct_reorder(inspection_num, sentiment)) %>%
ggplot(aes(x = cuisine_description,
y = sentiment)) +
geom_point()
inspection_sentiments %>%
filter(boro == "Staten Island",
critical_flag == "Critical") %>%
mutate(inspection_num = str_c("Inspection", inspection_num),
inspection_num = fct_reorder(inspection_num, sentiment)) %>%
ggplot(aes(x = cuisine_description,
y = sentiment)) +
geom_smooth()
inspection_sentiments %>%
group_by(cuisine_description) %>%
filter(boro == "Staten Island",
critical_flag == "Critical")
inspection_sentiments %>%
group_by(cuisine_description) %>%
filter(boro == "Staten Island",
critical_flag == "Critical") %>%
mutate(inspection_num = str_c("Inspection", inspection_num),
inspection_num = fct_reorder(inspection_num, sentiment)) %>%
ggplot(aes(x = cuisine_description,
y = sentiment))
inspection_sentiments %>%
group_by(cuisine_description) %>%
filter(boro == "Staten Island",
critical_flag == "Critical") %>%
mutate(inspection_num = str_c("Inspection", inspection_num),
inspection_num = fct_reorder(inspection_num, sentiment)) %>%
ggplot(aes(x = cuisine_description,
y = sentiment)) +
geom_boxplot()
inspection_sentiments %>%
group_by(cuisine_description) %>%
filter(boro == "Staten Island",
critical_flag == "Critical") %>%
mutate(inspection_num = str_c("Inspection", inspection_num),
inspection_num = fct_reorder(inspection_num, sentiment)) %>%
ggplot(aes(x = cuisine_description,
y = sentiment)) +
geom_density_ridges()
inspection_sentiments %>%
group_by(cuisine_description) %>%
filter(boro == "Staten Island",
critical_flag == "Critical") %>%
mutate(inspection_num = str_c("Inspection", inspection_num),
inspection_num = fct_reorder(inspection_num, sentiment)) %>%
ggplot(aes(x = cuisine_description,
y = "sentiment")) +
geom_density_ridges()
inspection_sentiments %>%
group_by(cuisine_description) %>%
filter(boro == "Staten Island",
critical_flag == "Critical") %>%
mutate(inspection_num = str_c("Inspection", inspection_num),
inspection_num = fct_reorder(boro, sentiment)) %>%
ggplot(aes(x = cuisine_description,
y = sentiment)) +
geom_density_ridges()
inspection_sentiments %>%
group_by(cuisine_description) %>%
filter(boro == "Staten Island",
critical_flag == "Critical") %>%
mutate(inspection_num = str_c("Inspection", inspection_num),
inspection_num = fct_reorder(boro, sentiment)) %>%
mutate(cuisine_score = forcats::fct_reorder(cuisine_description, score, IQR)) %>%
ggplot(aes(x = score, y = cuisine_score, color = cuisine_score)) +
geom_density_ridges(aes(fill = cuisine_score)), scale = 0.85)
inspection_sentiments %>%
group_by(cuisine_description) %>%
filter(boro == "Staten Island",
critical_flag == "Critical") %>%
mutate(inspection_num = str_c("Inspection", inspection_num),
inspection_num = fct_reorder(boro, sentiment)) %>%
mutate(cuisine_score = forcats::fct_reorder(cuisine_description, score, IQR)) %>%
ggplot(aes(x = score, y = cuisine_score, color = cuisine_score)) +
geom_density_ridges(aes(fill = cuisine_score)), scale = 0.85)
inspection_sentiments %>%
group_by(cuisine_description) %>%
filter(boro == "Staten Island",
critical_flag == "Critical") %>%
mutate(inspection_num = str_c("Inspection", inspection_num),
inspection_num = fct_reorder(boro, sentiment)) %>%
mutate(cuisine_score = forcats::fct_reorder(cuisine_description, score, IQR)) %>%
ggplot(aes(x = score, y = cuisine_score, color = cuisine_score)) +
geom_density_ridges(aes(fill = cuisine_score)) scale = 0.85)
inspection_sentiments %>%
group_by(cuisine_description) %>%
filter(boro == "Staten Island",
critical_flag == "Critical") %>%
mutate(inspection_num = str_c("Inspection", inspection_num),
inspection_num = fct_reorder(boro, sentiment)) %>%
mutate(cuisine_score = forcats::fct_reorder(cuisine_description, score, IQR)) %>%
ggplot(aes(x = score, y = cuisine_score, color = cuisine_score)) +
geom_density_ridges(aes(fill = cuisine_score))
inspection_sentiments %>%
group_by(cuisine_description) %>%
filter(boro == "Staten Island",
critical_flag == "Critical") %>%
mutate(inspection_num = str_c("Inspection", inspection_num),
inspection_num = fct_reorder(boro, sentiment)) %>%
mutate(cuisine_score = forcats::fct_reorder(cuisine_description, score, IQR)) %>%
ggplot(aes(x = score, y = cuisine_score, color = cuisine_score)) +
geom_density_ridges(aes(fill = cuisine_score)) +
theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
scale_fill_viridis(discrete = TRUE) +
scale_color_viridis(discrete = TRUE)
inspection_sentiments %>%
filter(boro == "Staten Island",
cuisine_description == "American",
critical_flag == "Critical") %>%
ggplot(aes(x = score, y = dba, color = score)) +
geom_density_ridges(aes(fill = score))
inspection_sentiments %>%
filter(boro == "Staten Island",
cuisine_description == "Turkish",
critical_flag == "Critical") %>%
ggplot(aes(x = score, y = dba, color = score)) +
geom_density_ridges(aes(fill = score))
inspection_sentiments %>%
filter(boro == "Staten Island",
cuisine_description == "Turkish") %>%
ggplot(aes(x = score, y = dba, color = score)) +
geom_density_ridges(aes(fill = score))
inspection_sentiments %>%
filter(boro == "Staten Island",
cuisine_description == "Spanish") %>%
ggplot(aes(x = score, y = dba, color = score)) +
geom_density_ridges(aes(fill = score))
inspection_sentiments %>%
filter(boro == "Staten Island",
cuisine_description == "Spanish") %>%
ggplot(aes(x = score, y = dba, color = score)) +
geom_density_ridges(aes(fill = score), scale = 0.85)
inspection_sentiments %>%
filter(boro == "Staten Island",
cuisine_description == "Spanish") %>%
ggplot(aes(x = score, y = dba, color = score)) +
geom_density_ridges(aes(fill = score), scale = 0.85) +
labs(x = "Score", y = "Restaurant Names", title = "Staten Island Inspection Scores for Spanish Restaurants")
inspection_sentiments %>%
filter(boro == "Staten Island",
cuisine_description == "Spanish") %>%
ggplot(aes(x = score, y = dba, color = score)) +
geom_density_ridges(aes(fill = dba), scale = 0.85) +
labs(x = "Score", y = "Restaurant Names", title = "Staten Island Inspection Scores for Spanish Restaurants")
inspection_sentiments %>%
filter(boro == "Staten Island",
cuisine_description == "Spanish") %>%
ggplot(aes(x = score, y = dba, color = score)) +
geom_density_ridges(aes(fill = dba), scale = 0.85) +
theme(legend = "none") +
labs(x = "Score", y = "Restaurant Names", title = "Staten Island Inspection Scores for Spanish Restaurants")
inspection_sentiments %>%
filter(boro == "Staten Island",
cuisine_description == "Spanish") %>%
ggplot(aes(x = score, y = dba, color = score)) +
geom_density_ridges(aes(fill = dba), scale = 0.85) +
theme(legend.position = "none") +
labs(x = "Score", y = "Restaurant Names", title = "Staten Island Inspection Scores for Spanish Restaurants")
inspection_sentiments %>%
filter(boro == "Staten Island",
cuisine_description == "Spanish") %>%
ggplot(aes(x = sentiment, y = dba, color = dba)) +
geom_density_ridges(aes(fill = dba), scale = 0.85) +
theme(legend.position = "none") +
labs(x = "Score", y = "Restaurant Names", title = "Staten Island Inspection Scores for Spanish Restaurants")
inspection_sentiments %>%
filter(boro == "Staten Island",
cuisine_description == "Spanish") %>%
ggplot(aes(x = sentiment, y = dba, color = dba)) +
geom_density_ridges(aes(fill = dba), scale = 0.85) +
theme(legend.position = "none") +
labs(x = "Word Sentiment Score", y = "Restaurant Names", title = "Staten Island Inspection Scores for Spanish Restaurants")
